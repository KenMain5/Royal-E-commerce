const userModel = require('../model/userModel'); 
const bcrypt = require('bcrypt'); 
const saltRounds = 10; 

function validateUserData(data) {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    const passwordRegex = /^(?=.*[A-Z])(?=.*[0-9]).{8,20}$/;

    if (!emailRegex.test(data.emailAddress)) {
        return "Invalid email address.";
    }

    if (!passwordRegex.test(data.password)) {
        return "Password must be 8-20 characters long, include at least one uppercase letter and one number.";
    }

    return null;
}

// function to check if the email has already been used.. 



module.exports = {
    registerUser: function(req, res){

        const validationError = validateUserData(req.body);
        if (validationError) {
            console.log('data is not valid')
            return res.status(400).send(validationError); 
        }

        bcrypt.hash(req.body.password, saltRounds, function(err, hash) {
            if (err) {
                return res.status(500).send("Error hashing password.");
            }
            userModel.inputUserDB({ ...req.body, password: hash }, (err, result) => {
                if (err) {
                    console.log(err); 
                    res.status(500).send('INTERNAL ERROR: FAILURE TO SAVE DATA'); 
                } else {
                    console.log('data successfully saved'); 
                    res.status(201).send('successfully created');
                }
            });
        });
    },
    signinUser: function(req, res){
        userModel.verifyUserDB(req.body, (err, result) => {
            if (err) {
                console.log(err); 
                res.status(404).send('something went wrong'); 
            } else if (result.result === 'not authorized') { 
                console.log('user is NOT authorized'); 
                res.status(200).send('user is NOT authorized')
            } else if (result.result.length >= 1) {
                console.log('user is authorized'); 
                res.status(200).send('user is authorized')
            } else {
                console.log('uncaught error'); 
                res.status(404).send('internal problem verifying user')
            }
        });
    }
}


